/*
 * Copyright (c) 2022 Solana Mobile Inc.
 */

package com.solana.mobilewalletadapter.fakedapp.usecase

import android.util.Log

/**
 * Sends 100,000 lamports (0.0001 SOL) to 7TMtPDYrmTow98sefMAV7ZxDFo84weCLhwhnPjm4uzoX
 */
object SendSOLTransactionUseCase {
    fun create(publicKey: ByteArray, latestBlockhash: ByteArray): ByteArray {
        assert(publicKey.size == 32) { "Invalid public key length for a Solana transaction" }
        assert(latestBlockhash.size == 32) { "Invalid blockhash length for a Solana transaction" }

        val transaction = SEND_SOL_TRANSACTION_TEMPLATE.clone()
        System.arraycopy(publicKey, 0, transaction, FeePayerOffset, publicKey.size)
        System.arraycopy(latestBlockhash, 0, transaction, BlockhashOffset, latestBlockhash.size)
        Log.d(TAG,
            "Created send SOL transaction for publicKey(base58)=${Base58EncodeUseCase(publicKey)}, latestBlockhash(base58)=${
                Base58EncodeUseCase(latestBlockhash)
            }")
        return transaction
    }

    private const val FeePayerOffset = 69
    private const val BlockhashOffset = 165
    private val SEND_SOL_TRANSACTION_TEMPLATE = listOf(
        1,
        0, // signature offset = 1
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        3,
        206,
        103,
        126,
        36,
        80,
        71,
        85,
        160,
        204,
        244,
        239,
        160,
        95,
        158,
        171,
        117,
        135,
        251,
        90,
        33,
        103,
        167,
        205,
        194,
        20,
        41,
        254,
        253,
        224,
        250,
        58,
        93,
        95,
        230,
        214,
        159,
        154,
        208,
        53,
        248,
        31,
        158,
        231,
        227,
        136,
        7,
        120,
        240,
        159,
        79,
        13,
        226,
        129,
        95,
        225,
        53,
        222,
        140,
        0,
        205,
        153,
        49,
        120,
        222,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        167,
        18,
        153,
        31,
        157,
        99,
        53,
        226,
        179,
        57,
        136,
        202,
        244,
        48,
        207,
        249,
        15,
        246,
        35,
        192,
        41,
        198,
        8,
        210,
        244,
        199,
        140,
        4,
        131,
        227,
        245,
        146,
        1,
        2,
        2,
        0,
        1,
        12,
        2,
        0,
        0,
        0,
        160,
        134,
        1,
        0,
        0,
        0,
        0,
        0,
    ).map(Int::toByte).toByteArray()

    private val TAG = SendSOLTransactionUseCase::class.simpleName
}